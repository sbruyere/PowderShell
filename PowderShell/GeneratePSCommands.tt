<#@ template language="C#" debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Management.Automation" #>
<#@ import namespace="System.Security" #>
<#@ import namespace="System.Collections.Immutable" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Management.Automation" #>
<#@ assembly name="System.Linq" #>
<#@ assembly name="System.Collections.Immutable" #>

// This file is automatically generated by a T4 template.
// Changes to this file may be overwritten if the T4 template is regenerated.

namespace PowderShell
{
    public partial class PSSanitizerCollections
    {
        public static readonly SortedDictionary<string, string> PSCommands = new SortedDictionary<string, string>
        {
<#
            var psCommands = CollectPSCommands();
            foreach (var kvp in psCommands)
            {
                WriteLine($"            {{ \"{EscapeString(kvp.Key)}\", \"{EscapeString(kvp.Value)}\" }},");
            }
#>
        };
    }
}

<#+
    private SortedDictionary<string, string> CollectPSCommands()
    {
        var psCommands = new SortedDictionary<string, string>();
        using (var ps = PowerShell.Create())
        {
            ps.AddScript("Get-Command");
            var results = ps.Invoke();
            foreach (PSObject result in results)
            {
                string name = result.ToString().ToLower();
                if (!psCommands.ContainsKey(name) && !name.Contains("\\"))
                    psCommands.Add(name, result.ToString());
            }
        }

        return psCommands;
    }

    private static string EscapeString(string value)
    {
        if (value == null)
            return string.Empty;

        return SecurityElement.Escape(value).Replace("&#xA;", "\\n").Replace("&#xD;", "\\r").Replace("&#x9;", "\\t").Replace("\\", "\\\\");
    }
#>
